[versions]
androidx-junit = "1.1.3"
appcompat = "1.5.1"
constraintlayout = "2.1.4"
core = "1.4.0"
core-ktx = "1.9.0"
core-testing = "2.1.0"
espresso-core = "3.4.0"
fragment-ktx = "1.5.4"
glide = "4.13.2"
gson = "2.10.1"
hamcrest-all = "1.3"
hilt-android-compiler = "2.44"
hilt-android-testing = "2.44"
hilt-compiler = "2.44"
hilt-android = "2.44"
junit = "4.13.2"
kotlinx-coroutines-core = "1.6.4"
legacy-support-v4 = "1.0.0"
chucker-library = "3.5.2"
lifecycle-livedata-ktx = "2.5.1"
lifecycle-runtime-ktx = "2.5.1"
lifecycle-viewmodel-ktx = "2.5.1"
logging-interceptor = "5.0.0-alpha.7"
material = "1.7.0"
mockito-android = "3.10.0"
mockito-core = "4.3.1"
mockito-kotlin = "4.0.0"
mockwebserver = "4.9.3"
navigation-fragment-ktx = "2.5.3"
navigation-ui-ktx = "2.5.3"
paging-common = "3.1.1"
paging-runtime = "3.1.1"
powermock-api-mockito2 = "2.0.2"
retrofit = "2.9.0"
robolectric = "4.8"
room-ktx = "2.4.3"
room-testing = "2.4.3"
truth = "1.1.3"
turbine = "0.8.0"
android-gradle = "7.3.0"
kotlin-android = "1.7.10"
kotlin-bom = "1.8.0"

[libraries]
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
androidx-core = { module = "androidx.test:core", version.ref = "core" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
androidx-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "core-testing" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso-core" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment-ktx" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-junit" }
androidx-legacy-support-v4 = { module = "androidx.legacy:legacy-support-v4", version.ref = "legacy-support-v4" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle-livedata-ktx" }
androidx-navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation-fragment-ktx" }
androidx-paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "paging-runtime" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room-ktx" }
androidx-room-paging = { module = "androidx.room:room-paging", version.ref = "room-ktx" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room-ktx" }
androidx-room-testing = { module = "androidx.room:room-testing", version.ref = "room-testing" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
dagger-hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt-android-compiler" }
dagger-hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt-android-testing" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
hamcrest-all = { module = "org.hamcrest:hamcrest-all", version.ref = "hamcrest-all" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt-compiler" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt-android" }
junit = { module = "junit:junit", version.ref = "junit" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines-core" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines-core" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines-core" }
chucker-library = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker-library" }
chucker-library-no-op = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chucker-library" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle-runtime-ktx" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle-viewmodel-ktx" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "logging-interceptor" }
material = { module = "com.google.android.material:material", version.ref = "material" }
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockito-android" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito-core" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }
navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation-ui-ktx" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "logging-interceptor" }
paging-common = { module = "androidx.paging:paging-common", version.ref = "paging-common" }
powermock-api-mockito2 = { module = "org.powermock:powermock-api-mockito2", version.ref = "powermock-api-mockito2" }
powermock-module-junit4 = { module = "org.powermock:powermock-module-junit4", version.ref = "powermock-api-mockito2" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room-ktx" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin-bom" }

[plugins]
android-application = { id = "com.android.application", version.ref = "android-gradle" }
android-library = { id = "com.android.library", version.ref = "android-gradle" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin-android" }
hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hilt-android" }
